{"version":3,"file":"static/js/746.683306a5.chunk.js","mappings":"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","sources":["components/SettingsItem/settings-item.component.jsx","pages/Settings/Settings.component.jsx","../node_modules/@mui/material/esm/FormControl/FormControlContext.js","../node_modules/@mui/material/esm/FormControl/useFormControl.js","../node_modules/@mui/material/esm/Typography/typographyClasses.js","../node_modules/@mui/material/esm/Typography/Typography.js","../node_modules/@mui/material/esm/utils/useControlled.js","../node_modules/@mui/utils/esm/useControlled.js","../node_modules/@mui/system/esm/Container/Container.js","../node_modules/@mui/system/esm/styled.js"],"sourcesContent":["import { Grid, Typography, Switch } from \"@mui/material\";\r\n\r\nconst SettingsItem = ({ title, subtitle_1, subtitle_2, checked }) => {\r\n    return (\r\n        <>\r\n            <Grid item>\r\n                <Typography variant='h6' >{title}</Typography>\r\n                <Typography variant='p' >{subtitle_1}<br /> {subtitle_2}</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n                <Switch checked={checked} />\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SettingsItem","import { Stack, Box, Grid, TextField, Paper, Typography, Switch } from \"@mui/material\";\r\nimport { Container } from \"@mui/system\";\r\nimport SettingsItem from \"../../components/SettingsItem/settings-item.component\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Settings = () => {\r\n    const [settings, setSettings] = useState({\r\n        discoveryMode: true,\r\n        relevantContent: true,\r\n        privateAccount: false,\r\n        shyMode: false\r\n    })\r\n    const { discoveryMode, relevantContent, privateAccount, shyMode } = useSelector(state => state.user.currentUser.settings)\r\n    useEffect(() => {\r\n        setSettings({\r\n            discoveryMode,\r\n            relevantContent,\r\n            privateAccount,\r\n            shyMode\r\n        })\r\n    }, [])\r\n    return (\r\n        <Box flex={4} p={2} sx={{mb: '50px'}} >\r\n            <Container sx={{ padding: '3%' }} maxWidth='sm' >\r\n                <Typography mb={2} variant='h3' >Settings</Typography>\r\n                <Stack spacing={5}>\r\n                    <Box>\r\n                        <Typography variant='h6' fontWeight={100} >App Mode</Typography>\r\n                        <Grid container spacing={4}  >\r\n                            <SettingsItem title={'Theme'} subtitle_1={'Set the theme light/dark for the app'}  />\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography variant='h6' fontWeight={100} >Preferences</Typography>\r\n                        <Grid container spacing={4}  >\r\n                            <SettingsItem title={'Discovery Mode'} subtitle_1={'Allows your posts to appear in the discovery section'} subtitle_2={'Globally'} checked={settings.discoveryMode} />\r\n                            <SettingsItem title={'Relevant Content Only'} subtitle_1={'Shows content in accordance to your preferences'} subtitle_2={'(no forced recommendation)'} checked={settings.relevantContent} />\r\n                        </Grid>\r\n                    </Box>\r\n                    <Box>\r\n                        <Typography variant='h6' fontWeight={100} >Privacy</Typography>\r\n                        <Grid container spacing={4}  >\r\n                            <SettingsItem title={'Private Account'} subtitle_1={\"Hide your posts from people who don't follow you\"} checked={settings.privateAccount} />\r\n                            <SettingsItem title={'Shy Mode'} subtitle_1={'Does not recommend your profile to stranger'} checked={settings.shyMode} />\r\n                        </Grid>\r\n                    </Box>\r\n                </Stack>\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Settings;\r\n\r\n","import * as React from 'react';\n/**\n * @ignore - internal component.\n */\n\nconst FormControlContext = /*#__PURE__*/React.createContext();\n\nif (process.env.NODE_ENV !== 'production') {\n  FormControlContext.displayName = 'FormControlContext';\n}\n\nexport default FormControlContext;","import * as React from 'react';\nimport FormControlContext from './FormControlContext';\nexport default function useFormControl() {\n  return React.useContext(FormControlContext);\n}","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getTypographyUtilityClass(slot) {\n  return generateUtilityClass('MuiTypography', slot);\n}\nconst typographyClasses = generateUtilityClasses('MuiTypography', ['root', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'subtitle1', 'subtitle2', 'body1', 'body2', 'inherit', 'button', 'caption', 'overline', 'alignLeft', 'alignRight', 'alignCenter', 'alignJustify', 'noWrap', 'gutterBottom', 'paragraph']);\nexport default typographyClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"align\", \"className\", \"component\", \"gutterBottom\", \"noWrap\", \"paragraph\", \"variant\", \"variantMapping\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport { getTypographyUtilityClass } from './typographyClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    align,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, ownerState.align !== 'inherit' && `align${capitalize(align)}`, gutterBottom && 'gutterBottom', noWrap && 'noWrap', paragraph && 'paragraph']\n  };\n  return composeClasses(slots, getTypographyUtilityClass, classes);\n};\n\nexport const TypographyRoot = styled('span', {\n  name: 'MuiTypography',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, ownerState.variant && styles[ownerState.variant], ownerState.align !== 'inherit' && styles[`align${capitalize(ownerState.align)}`], ownerState.noWrap && styles.noWrap, ownerState.gutterBottom && styles.gutterBottom, ownerState.paragraph && styles.paragraph];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  margin: 0\n}, ownerState.variant && theme.typography[ownerState.variant], ownerState.align !== 'inherit' && {\n  textAlign: ownerState.align\n}, ownerState.noWrap && {\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  whiteSpace: 'nowrap'\n}, ownerState.gutterBottom && {\n  marginBottom: '0.35em'\n}, ownerState.paragraph && {\n  marginBottom: 16\n}));\nconst defaultVariantMapping = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  inherit: 'p'\n}; // TODO v6: deprecate these color values in v5.x and remove the transformation in v6\n\nconst colorTransformations = {\n  primary: 'primary.main',\n  textPrimary: 'text.primary',\n  secondary: 'secondary.main',\n  textSecondary: 'text.secondary',\n  error: 'error.main'\n};\n\nconst transformDeprecatedColors = color => {\n  return colorTransformations[color] || color;\n};\n\nconst Typography = /*#__PURE__*/React.forwardRef(function Typography(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiTypography'\n  });\n  const color = transformDeprecatedColors(themeProps.color);\n  const props = extendSxProp(_extends({}, themeProps, {\n    color\n  }));\n\n  const {\n    align = 'inherit',\n    className,\n    component,\n    gutterBottom = false,\n    noWrap = false,\n    paragraph = false,\n    variant = 'body1',\n    variantMapping = defaultVariantMapping\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const ownerState = _extends({}, props, {\n    align,\n    color,\n    className,\n    component,\n    gutterBottom,\n    noWrap,\n    paragraph,\n    variant,\n    variantMapping\n  });\n\n  const Component = component || (paragraph ? 'p' : variantMapping[variant] || defaultVariantMapping[variant]) || 'span';\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(TypographyRoot, _extends({\n    as: Component,\n    ref: ref,\n    ownerState: ownerState,\n    className: clsx(classes.root, className)\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Typography.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Set the text-align on the component.\n   * @default 'inherit'\n   */\n  align: PropTypes.oneOf(['center', 'inherit', 'justify', 'left', 'right']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the text will have a bottom margin.\n   * @default false\n   */\n  gutterBottom: PropTypes.bool,\n\n  /**\n   * If `true`, the text will not wrap, but instead will truncate with a text overflow ellipsis.\n   *\n   * Note that text overflow can only happen with block or inline-block level elements\n   * (the element needs to have a width in order to overflow).\n   * @default false\n   */\n  noWrap: PropTypes.bool,\n\n  /**\n   * If `true`, the element will be a paragraph element.\n   * @default false\n   */\n  paragraph: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * Applies the theme typography styles.\n   * @default 'body1'\n   */\n  variant: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['body1', 'body2', 'button', 'caption', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'inherit', 'overline', 'subtitle1', 'subtitle2']), PropTypes.string]),\n\n  /**\n   * The component maps the variant prop to a range of different HTML element types.\n   * For instance, subtitle1 to `<h6>`.\n   * If you wish to change that mapping, you can provide your own.\n   * Alternatively, you can use the `component` prop.\n   * @default {\n   *   h1: 'h1',\n   *   h2: 'h2',\n   *   h3: 'h3',\n   *   h4: 'h4',\n   *   h5: 'h5',\n   *   h6: 'h6',\n   *   subtitle1: 'h6',\n   *   subtitle2: 'h6',\n   *   body1: 'p',\n   *   body2: 'p',\n   *   inherit: 'p',\n   * }\n   */\n  variantMapping: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .object\n} : void 0;\nexport default Typography;","import { unstable_useControlled as useControlled } from '@mui/utils';\nexport default useControlled;","/* eslint-disable react-hooks/rules-of-hooks, react-hooks/exhaustive-deps */\nimport * as React from 'react';\nexport default function useControlled({\n  controlled,\n  default: defaultProp,\n  name,\n  state = 'value'\n}) {\n  // isControlled is ignored in the hook dependency lists as it should never change.\n  const {\n    current: isControlled\n  } = React.useRef(controlled !== undefined);\n  const [valueState, setValue] = React.useState(defaultProp);\n  const value = isControlled ? controlled : valueState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    React.useEffect(() => {\n      if (isControlled !== (controlled !== undefined)) {\n        console.error([`MUI: A component is changing the ${isControlled ? '' : 'un'}controlled ${state} state of ${name} to be ${isControlled ? 'un' : ''}controlled.`, 'Elements should not switch from uncontrolled to controlled (or vice versa).', `Decide between using a controlled or uncontrolled ${name} ` + 'element for the lifetime of the component.', \"The nature of the state is determined during the first render. It's considered controlled if the value is not `undefined`.\", 'More info: https://fb.me/react-controlled-components'].join('\\n'));\n      }\n    }, [state, name, controlled]);\n    const {\n      current: defaultValue\n    } = React.useRef(defaultProp);\n    React.useEffect(() => {\n      if (!isControlled && defaultValue !== defaultProp) {\n        console.error([`MUI: A component is changing the default ${state} state of an uncontrolled ${name} after being initialized. ` + `To suppress this warning opt to use a controlled ${name}.`].join('\\n'));\n      }\n    }, [JSON.stringify(defaultProp)]);\n  }\n\n  const setValueIfUncontrolled = React.useCallback(newValue => {\n    if (!isControlled) {\n      setValue(newValue);\n    }\n  }, []);\n  return [value, setValueIfUncontrolled];\n}","import PropTypes from 'prop-types';\nimport createContainer from './createContainer';\n/**\n *\n * Demos:\n *\n * - [Container (Material UI)](https://mui.com/material-ui/react-container/)\n * - [Container (MUI System)](https://mui.com/system/react-container/)\n *\n * API:\n *\n * - [Container API](https://mui.com/system/api/container/)\n */\n\nconst Container = createContainer();\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   * @default false\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   * @default 'lg'\n   */\n  maxWidth: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .oneOfType([PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl', false]), PropTypes.string]),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Container;","import createStyled from './createStyled';\nconst styled = createStyled();\nexport default styled;"],"names":["title","subtitle_1","subtitle_2","checked","Grid","item","Typography","variant","Switch","useState","discoveryMode","relevantContent","privateAccount","shyMode","settings","setSettings","useSelector","state","user","currentUser","useEffect","Box","flex","p","sx","mb","Container","padding","maxWidth","Stack","spacing","fontWeight","container","FormControlContext","React","useFormControl","getTypographyUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","TypographyRoot","styled","name","overridesResolver","props","styles","ownerState","root","align","capitalize","noWrap","gutterBottom","paragraph","theme","_extends","margin","typography","textAlign","overflow","textOverflow","whiteSpace","marginBottom","defaultVariantMapping","h1","h2","h3","h4","h5","h6","subtitle1","subtitle2","body1","body2","inherit","colorTransformations","primary","textPrimary","secondary","textSecondary","error","inProps","ref","themeProps","useThemeProps","color","transformDeprecatedColors","extendSxProp","className","component","variantMapping","other","_objectWithoutPropertiesLoose","Component","classes","slots","composeClasses","useUtilityClasses","_jsx","as","clsx","controlled","defaultProp","default","isControlled","undefined","current","valueState","setValue","newValue","createContainer","createStyled"],"sourceRoot":""}
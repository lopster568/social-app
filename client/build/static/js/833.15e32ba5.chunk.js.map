{"version":3,"file":"static/js/833.15e32ba5.chunk.js","mappings":"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","sources":["api/post.js","components/Feed/feed.component.jsx","components/AuthorHeader/author-header.component.jsx","components/CommentSection/comment-section.component.jsx","components/PopMenuItem/pop-menu-item.component.jsx","components/PostItem/post.component.jsx","components/PostLoadingSkeleton/post-loading-skeleton.component.jsx","pages/Discover/discover.component.jsx","redux/post-loading/post-loading.actions.js"],"sourcesContent":["import axios from 'axios'\r\n\r\nconst API = axios.create({ baseURL: 'http://ec2-54-175-11-135.compute-1.amazonaws.com:8000/api/post' })\r\n//HEADER AUTHORIZATION\r\nAPI.interceptors.request.use((req) => {\r\n    const storedUser = Boolean(localStorage.getItem('persist:root'))\r\n    if (storedUser) {\r\n        const storedToken = JSON.parse(JSON.parse(localStorage.getItem('persist:root')).user).token\r\n        req.headers.authorization = `Bearer ${storedToken}`\r\n    }\r\n    return req\r\n})\r\n\r\n//POST ROUTES\r\nexport const getPosts = () => API.get('/')\r\nexport const getFeedPosts = () => API.get('/feed')\r\nexport const getPost = (postId) => API.get(`/${postId}`)\r\nexport const createPost = (data) => API.post('/', data)\r\nexport const getSavedPosts = () => API.post(`/saved`)\r\nexport const getPreferredPosts = () => API.get('/preferred')\r\nexport const getPostByUser = (id) => API.post(`/postsby/${id}`)\r\nexport const getPostByTag = (id) => API.get(`/tag/${id}`)\r\n\r\n//POST UTILS ROUTES\r\nexport const likePost = (postId) => API.patch(`/${postId}/like`)\r\nexport const savePost = (postId) => API.post(`/${postId}/save`)\r\nexport const commentPost = (postId, comment) => API.patch(`/${postId}/comment`, comment)\r\nexport const deletePost = (postId) => API.delete(`/${postId}`)","import { Box } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Post from \"../PostItem/post.component\";\r\n\r\nconst Feed = ({posts}) => {\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n    const userId = currentUser?._id\r\n\r\n    return (\r\n        <Box sx={{ minHeight: '100vh'}} m={0} flex={4} p={2}  >\r\n            {\r\n                posts.map(post => {\r\n                    const index = post.likes.findIndex(id => id === userId)\r\n                    return (\r\n                        <Post key={post._id} post={post} liked={(index === -1) ? false : true} />\r\n                    )\r\n                })\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Feed","import { Avatar, CardHeader, IconButton } from \"@mui/material\";\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport { useNavigate } from \"react-router\";\r\n\r\nconst AuthorHeader = ({ author, subtitle, setAnchor, noAction, id }) => {\r\n    const navigate = useNavigate()\r\n    return (\r\n        <CardHeader\r\n            avatar={\r\n                author?.avatar ? (\r\n                    <IconButton sx={{m: 0, p: 0}} onClick={() => navigate(`/user/${id}`)} >\r\n                        <Avatar alt={\"User Avatar\"} src={author?.avatar} />\r\n                    </IconButton>\r\n                ) : (\r\n                    <IconButton onClick={() => navigate(\"/\")} >\r\n                        <Avatar sx={{ bgcolor: `red` }} alt={\"User Avatar\"}>\r\n                            {author?.displayName?.charAt(0)}\r\n                        </Avatar>\r\n                    </IconButton>\r\n\r\n                )\r\n            }\r\n            action={\r\n                noAction ? null : (\r\n                    <IconButton aria-label=\"settings\" onClick={(e) => setAnchor(e.currentTarget)} >\r\n                        <MoreVertIcon />\r\n                    </IconButton>\r\n                )\r\n            }\r\n            title={author?.displayName}\r\n            subheader={subtitle}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AuthorHeader","import { FormControl, InputLabel, OutlinedInput, InputAdornment, CardContent, IconButton, Collapse, Box, List, ListItem, ListItemAvatar, ListItemText, Avatar, Divider, Typography } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { commentPost } from \"../../api/post\";\r\nimport { useSelector } from \"react-redux\";\r\nimport moment from 'moment'\r\nimport SendIcon from '@mui/icons-material/Send';\r\nconst CommentSection = ({ comments, expanded, postId }) => {\r\n    const [comment, setComment] = useState(false)\r\n    const [commentAnchor, setCommentAnchor] = useState(null)\r\n\r\n    const currentUser = useSelector(state => state.user.currentUser)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        commentPost(postId, { comment })\r\n    }\r\n\r\n    return (\r\n        <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n            <CardContent >\r\n                <Box component=\"form\" onSubmit={handleSubmit}>\r\n                    <FormControl sx={{ m: 1, width: '100%' }} variant=\"outlined\">\r\n                        <InputLabel >Comment</InputLabel>\r\n                        <OutlinedInput\r\n                            onChange={(e) => setComment(e.target.value)}\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton type='submit' variant='contained' ><SendIcon /></IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                            label='Comment'\r\n                        />\r\n                    </FormControl>\r\n                </Box>\r\n                <List sx={{ width: '100%', maxWidth: { lg: '80%' } }}>\r\n                    {\r\n                        comments?.map(({ _id, user, comment, createdAt }) => {\r\n                            return (\r\n                                <ListItem alignItems=\"flex-start\" key={_id}>\r\n                                    <ListItemAvatar>\r\n                                        <Avatar alt={\"Comment Author\"} src={user.avatar} />\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText\r\n                                        primary={user.displayName}\r\n                                        secondary={\r\n                                            <>\r\n\r\n                                                {moment(createdAt).fromNow()}\r\n                                                <Typography\r\n                                                    sx={{ display: 'inline' }}\r\n                                                    component=\"span\"\r\n                                                    variant=\"body2\"\r\n                                                    color=\"text.primary\"\r\n                                                >\r\n                                                    {`: ${comment}`}\r\n                                                </Typography>\r\n                                            </>\r\n                                        }\r\n                                    />\r\n                                </ListItem>\r\n                            )\r\n                        })\r\n                    }\r\n                    <Divider variant=\"inset\" component=\"li\" />\r\n                </List>\r\n            </CardContent>\r\n        </Collapse>\r\n    )\r\n}\r\n\r\nexport default CommentSection\r\n//     < Menu\r\n// anchorEl = { commentAnchor }\r\n// onClose = {() => setCommentAnchor(null)}\r\n// open = { Boolean(commentAnchor) }\r\n//     >\r\n//     <MenuList>\r\n//         <MenuItem>\r\n//             <ListItemIcon>\r\n//                 <FlagIcon fontSize=\"small\" />\r\n//             </ListItemIcon>\r\n//             <Typography variant=\"inherit\" noWrap>\r\n//                 Report\r\n//             </Typography>\r\n//         </MenuItem>\r\n//         {\r\n//             author === comments\r\n//         }\r\n//     </MenuList>\r\n//             </Menu >","import { ListItemIcon, MenuItem, Typography } from \"@mui/material\";\r\n\r\nconst PopMenuItem = ({menuItemName, icon, clickHandler, postId}) => {\r\n    return (\r\n        <MenuItem onClick={() => clickHandler(postId) } >\r\n            <ListItemIcon>\r\n                {icon}\r\n            </ListItemIcon>\r\n            <Typography variant=\"inherit\" noWrap>\r\n                {menuItemName}\r\n            </Typography>\r\n        </MenuItem>\r\n    )\r\n}\r\n\r\nexport default PopMenuItem","import { Card, CardActions, CardContent, CardMedia, IconButton, Checkbox, Menu, MenuList, Typography, Button, TextField, Skeleton, Grid, CardHeader } from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deletePost, likePost } from \"../../api/post\";\r\nimport AuthorHeader from \"../AuthorHeader/author-header.component\";\r\nimport CommentSection from \"../CommentSection/comment-section.component\";\r\nimport moment from \"moment\";\r\nimport PopMenuItem from \"../PopMenuItem/pop-menu-item.component\";\r\nimport { savePost } from \"../../api/post\";\r\nimport { Box, Container, Stack } from \"@mui/system\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\n// ICONS\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport FlagIcon from '@mui/icons-material/Flag';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport FavoriteOutlinedIcon from '@mui/icons-material/FavoriteBorder';\r\nimport ShareIcon from '@mui/icons-material/Share';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport ModeCommentIcon from '@mui/icons-material/ModeComment';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\nimport CheckCircleIcon from '@mui/icons-material/CheckCircle';\r\nimport CancelIcon from '@mui/icons-material/Cancel';\r\nimport { styled } from '@mui/material/styles'\r\nimport { setAlert } from \"../../redux/alert/alert.actions\";\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    [theme.breakpoints.down(\"md\")]: {\r\n        marginBottom: '30px'\r\n    }\r\n}))\r\n\r\nconst Post = ({ post, liked, edit }) => {\r\n    const [postAnchor, setPostAnchor] = useState(null)\r\n    const [expanded, setExpanded] = useState(false)\r\n    const [editPostData, setEditPostData] = useState({})\r\n    const [deleteConfirmation, setDeleteConfirmation] = useState(false)\r\n    const dispatch = useDispatch()\r\n    const userId = useSelector(state => state.user.currentUser ? state.user.currentUser._id : null)\r\n\r\n    const navigate = useNavigate()\r\n    return (\r\n        <StyledCard >\r\n            {\r\n                <>\r\n                    <AuthorHeader author={post?.author} id={post?.author._id} subtitle={moment(post?.createdAt).fromNow()} setAnchor={setPostAnchor} />\r\n                    <CardMedia\r\n                        loading=\"lazy\"\r\n                        component=\"img\"\r\n                        height=\"20%\"\r\n                        image={post?.img}\r\n                        alt=\"Card Image\"\r\n                    />\r\n                    <CardContent>\r\n                        {\r\n                            edit ? (\r\n                                <Stack spacing={2} >\r\n                                    <Typography variant=\"subtitle1\" >Caption</Typography>\r\n                                    <TextField sx={{ width: '100%' }} size=\"small\" placeholder={'Change Caption'} defaultValue={post?.caption} onChange={(e) => setEditPostData({ ...editPostData, caption: e.target.value })} />\r\n                                    <Typography variant=\"subtitle1\" >Tags</Typography>\r\n                                    <TextField sx={{ width: '100%' }} multiline rows={3} size=\"small\" placeholder={'Change Caption'} defaultValue={post?.tags} onChange={(e) => setEditPostData({ ...editPostData, tags: e.target.value })} />\r\n                                    <Button variant=\"contained\" sx={{ width: '100%' }} onClick={() => { }} >Save</Button>\r\n                                </Stack>\r\n                            ) : (\r\n                                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                                    {post?.caption}\r\n                                </Typography>\r\n                            )\r\n                        }\r\n\r\n                        <Typography variant='caption' color=\"text.secondary\">\r\n                            Likes: {post?.likes?.length} Comments: {post?.comments?.length}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    <CardActions disableSpacing>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={() => likePost(post?._id)} >\r\n                            <Checkbox icon={<FavoriteOutlinedIcon />} checkedIcon={<FavoriteIcon sx={{ color: 'red' }} />} defaultChecked={liked} />\r\n                        </IconButton>\r\n                        <IconButton onClick={() => setExpanded(!expanded)} aria-label=\"share\">\r\n                            <ModeCommentIcon\r\n                                expand={expanded.toString()}\r\n                                aria-expanded={expanded}\r\n                                aria-label=\"show more\"\r\n                            />\r\n                        </IconButton>\r\n                        <IconButton aria-label=\"add to favorites\" onClick={async () => {\r\n                            try {\r\n                                await savePost(post?._id)\r\n                            } catch (err) {\r\n                                dispatch(setAlert(err.response.data.message))\r\n                            }\r\n                        }} >\r\n                            <Checkbox icon={<BookmarkBorderIcon />} checkedIcon={<BookmarkIcon />} />\r\n                        </IconButton>\r\n                    </CardActions>\r\n\r\n                    <CommentSection expanded={expanded} comments={post?.comments} postId={post?._id} />\r\n                    <Menu\r\n                        anchorEl={postAnchor}\r\n                        onClose={() => {\r\n                            setPostAnchor(null)\r\n                            setDeleteConfirmation(false)\r\n                        }}\r\n                        open={Boolean(postAnchor)}\r\n                    >\r\n                        {\r\n                            deleteConfirmation ? (\r\n                                <MenuList>\r\n                                    <PopMenuItem menuItemName={\"Confirm\"} sx={{ backgroundColor: \"red\" }} clickHandler={() => { deletePost(post?._id) }} icon={<CheckCircleIcon sx={{ color: \"green\" }} />} />\r\n                                    <PopMenuItem menuItemName={\"Cancel\"} clickHandler={() => setDeleteConfirmation(false)} icon={<CancelIcon sx={{ color: \"red\" }} />} />\r\n                                </MenuList>\r\n                            ) : (\r\n                                <MenuList>\r\n                                    {\r\n                                        post?.author?._id === userId ? (\r\n                                            <MenuList sx={{ p: 0 }} >\r\n                                                <PopMenuItem menuItemName={\"Edit\"} clickHandler={() => navigate(`/post/edit/${post?._id}`)} icon={<EditIcon />} />\r\n                                                <PopMenuItem menuItemName={\"Delete\"} clickHandler={() => setDeleteConfirmation(true)} postId={post?._id} icon={<DeleteIcon />} />\r\n                                            </MenuList>\r\n                                        ) : null\r\n                                    }\r\n                                    <PopMenuItem menuItemName={\"Share\"} icon={<ShareIcon />} clickHandler={() => { navigator.clipboard.writeText(`http://localhost:3000/post/${post?._id}`) }} />\r\n                                    <PopMenuItem menuItemName={\"Report\"} icon={<FlagIcon />} clickHandler={() => { }} />\r\n                                </MenuList>\r\n                            )\r\n                        }\r\n                    </Menu>\r\n                </>\r\n            }\r\n        </StyledCard >\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default Post;","import { Card, CardContent, CardHeader, Skeleton } from \"@mui/material\";\r\nimport styled from \"@emotion/styled\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nconst StyledCard = styled(Card)(({ theme }) => ({\r\n    [theme.breakpoints.down(\"md\")]: {\r\n        marginBottom: '30px'\r\n    }\r\n}))\r\n\r\nconst PostLoadingSkeleton = () => (\r\n    <Box sx={{ minHeight: '100vh', overflow: 'hidden' }} m={0} flex={4} p={2}  >\r\n        <StyledCard >\r\n            <CardHeader\r\n                avatar={\r\n                    (<Skeleton animation=\"wave\" variant=\"circular\" width={40} height={40} />)\r\n                }\r\n                title={(<Skeleton animation=\"wave\" height={10} width=\"80%\" style={{ marginBottom: 6 }} />)}\r\n                subheader={(<Skeleton animation=\"wave\" height={10} width=\"40%\" />)}\r\n            />\r\n            <Skeleton variant=\"rectangular\" sx={{ height: '430px' }} />\r\n            <CardContent>\r\n                <Skeleton animation=\"wave\" height={30} style={{ marginBottom: 6 }} />\r\n                <Skeleton animation=\"wave\" height={10} width=\"80%\" />\r\n            </CardContent>\r\n        </StyledCard>\r\n    </Box>\r\n)\r\n\r\nexport default PostLoadingSkeleton","import Feed from \"../../components/Feed/feed.component\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getPosts } from '../../api/post.js'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toggleLoading } from \"../../redux/post-loading/post-loading.actions\";\r\nimport PostLoadingSkeleton from \"../../components/PostLoadingSkeleton/post-loading-skeleton.component\";\r\nimport { setAlert } from \"../../redux/alert/alert.actions\";\r\n\r\nconst Discover = () => {\r\n    const dispatch = useDispatch()\r\n    const isLoading = useSelector(state => state.post_loading)\r\n    const [posts, setPosts] = useState([])\r\n    useEffect(() => {\r\n        getPosts().then(resp => {\r\n            setPosts(resp.data)\r\n            dispatch(toggleLoading())\r\n        })\r\n        return () => {\r\n            dispatch(toggleLoading())\r\n        } \r\n    }, [])\r\n\r\n    return (\r\n        isLoading ? (\r\n            <PostLoadingSkeleton />\r\n        ) : (\r\n            <Feed posts={posts} />\r\n        )\r\n    );\r\n}\r\n\r\nexport default Discover;","import PostLoadingTypes from \"./post-loading.types\";\r\n\r\nexport const toggleLoading = (action) => ({\r\n    type: PostLoadingTypes.TOGGLE_LOADING\r\n})"],"names":["API","axios","baseURL","interceptors","request","use","req","Boolean","localStorage","getItem","storedToken","JSON","parse","user","token","headers","authorization","getPosts","get","getFeedPosts","getPost","postId","createPost","data","post","getSavedPosts","getPostByUser","id","likePost","patch","savePost","commentPost","comment","deletePost","delete","posts","currentUser","useSelector","state","userId","_id","sx","minHeight","m","flex","p","map","index","likes","findIndex","liked","author","subtitle","setAnchor","noAction","navigate","useNavigate","CardHeader","avatar","IconButton","onClick","Avatar","alt","src","bgcolor","displayName","charAt","action","e","currentTarget","MoreVert","title","subheader","comments","expanded","useState","setComment","Collapse","in","timeout","unmountOnExit","CardContent","Box","component","onSubmit","preventDefault","FormControl","width","variant","InputLabel","OutlinedInput","onChange","target","value","endAdornment","InputAdornment","position","type","Send","label","List","maxWidth","lg","createdAt","ListItem","alignItems","ListItemAvatar","ListItemText","primary","secondary","moment","fromNow","Typography","display","color","Divider","menuItemName","icon","clickHandler","MenuItem","ListItemIcon","noWrap","StyledCard","styled","Card","theme","breakpoints","down","marginBottom","edit","postAnchor","setPostAnchor","setExpanded","editPostData","setEditPostData","deleteConfirmation","setDeleteConfirmation","dispatch","useDispatch","CardMedia","loading","height","image","img","Stack","spacing","TextField","size","placeholder","defaultValue","caption","multiline","rows","tags","Button","length","CardActions","disableSpacing","Checkbox","checkedIcon","Favorite","defaultChecked","ModeComment","expand","toString","setAlert","response","message","BookmarkBorder","Bookmark","Menu","anchorEl","onClose","open","MenuList","backgroundColor","CheckCircle","Cancel","Edit","Delete","Share","navigator","clipboard","writeText","Flag","overflow","animation","style","isLoading","post_loading","setPosts","useEffect","then","resp","toggleLoading","PostLoadingTypes"],"sourceRoot":""}